{
    "meta": {
        "名称": "需求系统",
        "描述": "需求理解引擎，通过智能分析和多系统协作，将用户模糊需求转化为精确的技术实现方案。从模糊到明确通过智能分析将模糊需求转化为明确任务，从单一到网络建立需求间的关联网络实现整体性理解，从静态到演化支持需求的动态演化和持续优化，从被动到主动主动发现和预测潜在需求。作为需求理解引擎，将模糊需求转化为精确技术方案，负责需求分析、策略生成和技术方案制定，数据系统提供需求相关数据存储和检索支持，学习系统提供需求处理策略的优化和改进，调度系统负责需求处理策略的调度和执行。协作模式为需求流向用户到需求系统到技术方案，策略流向需求系统到调度系统的执行策略，协作方式是需求分析、策略制定、方案输出的完整流程。",
        "设计理念": "从模糊到明确，从单一到网络，从静态到演化，从被动到主动的需求理解与转化",
        "架构定位": "需求理解引擎",
        "依赖对象": [
            "数据系统",
            "学习系统"
        ],
        "协作对象": [
            "调度系统",
            "插件系统"
        ],
        "实施指导": {
            "文件夹名称": "requirement-system",
            "文件类型": ["策略", "知识", "记录"],
            "生成原则": "基于本蓝图生成ai-workspace下的需求系统文件夹结构和初始策略文件，作为AI的知识库使用"
        },
        "体系内关系": {
            "描述": "需求系统与其他系统的关系定义",
            "关系模式": {
                "需求理解者角色": "需求系统作为需求理解引擎，将模糊需求转化为精确技术方案",
                "职责划分": [
                    "需求系统：负责需求分析、策略生成和技术方案制定",
                    "数据系统：提供需求相关数据存储和检索支持",
                    "学习系统：提供需求处理策略的优化和改进",
                    "调度系统：负责需求处理策略的调度和执行"
                ],
                "协作模式": {
                    "需求流向": "用户 → 需求系统 → 技术方案",
                    "策略流向": "需求系统 → 调度系统（执行策略）",
                    "协作方式": "需求分析、策略制定、方案输出的完整流程"
                }
            }
        }
    },
    "系统定位": {
        "架构层级": "第五层基石系统",
        "核心使命": "作为AI-System的需求理解引擎，通过智能分析和多系统协作，将用户模糊需求转化为精确的技术实现方案",
        "主要职责": [
            "分析需求并生成处理策略",
            "制定数据存储策略",
            "生成系统协作策略",
            "提供策略执行指导",
            "将模糊需求转化为明确、可执行的技术实现方案"
        ],
        "系统边界": {
            "负责内容": [
                "需求分析策略生成",
                "需求处理策略制定",
                "技术实现策略规划",
                "依赖关系策略分析",
                "实现路径策略设计",
                "系统协作策略制定"
            ],
            "不负责内容": [
                "策略优化和改进（由学习系统负责）",
                "具体代码实现",
                "测试用例设计",
                "部署配置管理",
                "运维监控方案",
                "文件内容存储",
                "数据持久化操作",
                "知识库管理"
            ]
        },
        "设计理念": [
            "策略生成专注 - 专注于生成相应的处理策略，不直接进行数据存储操作",
            "协作不越界 - 与数据系统协作采用策略生成+存储委托模式",
            "智能理解驱动 - 通过深度语义理解提高需求把握准确度",
            "网络化思维 - 建立需求间的关联网络，实现整体性理解"
        ],
        "职责约束": [
            "严格保持策略生成角色，不直接操作数据存储",
            "所有文件内容存储通过数据系统完成",
            "需求系统生成存储策略，数据系统执行存储操作",
            "不侵犯其他系统的专属职能范围"
        ],
        "协作关系": {
            "与数据系统协作": {
                "协作模式": "策略生成 + 存储委托",
                "数据流向": {
                    "输出到数据系统": [
                        "需求分析结果存储委托",
                        "需求关联关系存储委托",
                        "策略生成结果存储委托"
                    ],
                    "从数据系统获取": [
                        "历史需求数据提供",
                        "需求关联数据提供",
                        "策略模板数据提供"
                    ]
                }
            },
            "与调度系统协作": {
                "知识流动": {
                    "输入": [
                        "需求理解结果",
                        "分析洞察",
                        "关系发现",
                        "优化建议"
                    ],
                    "输出": [
                        "任务执行状态",
                        "资源使用情况",
                        "执行反馈",
                        "异常情况"
                    ]
                },
                "协同模式": {
                    "需求理解": "将模糊需求转化为明确任务",
                    "任务规划": "基于需求制定执行计划",
                    "状态同步": "实时同步执行状态",
                    "动态调整": "根据反馈优化需求"
                }
            },
            "与插件系统协作": {
                "协作模式": "需求驱动策略生成",
                "数据流向": {
                    "输出到插件系统": [
                        "结构化需求文档",
                        "需求分析结果",
                        "技术实现要求",
                        "策略生成触发信号"
                    ],
                    "从插件系统获取": [
                        "策略生成状态反馈",
                        "策略可用性通知"
                    ]
                },
                "协同模式详细": {
                    "需求传递": "将分析后的需求文档传递给插件系统",
                    "策略触发": "触发插件系统的策略生成流程",
                    "状态同步": "同步策略生成进度和结果",
                    "反馈优化": "基于策略生成结果优化需求分析"
                }
            }
        }
    },
    "系统组成": {
        "核心组件": [
            "系统激活机制",
            "智能需求分类器",
            "需求收集策略生成器",
            "内容处理策略生成器",
            "方法论策略生成器",
            "网络关系策略生成器",
            "自动化流水线策略生成器"
        ],
        "组件关系": {
            "系统激活机制": "负责检测需求任务并激活相应的策略生成器",
            "智能需求分类器": "基于多源学习理念，通过语义分析、上下文识别和操作对象分析，智能识别项目相关需求、AI系统优化需求和混合需求",
            "需求收集策略生成器": "生成需求收集、验证、修订、确认策略，集成智能分类结果优化处理流程",
            "内容处理策略生成器": "生成业务理解、问题识别、价值提炼策略，根据需求类型调整分析深度",
            "方法论策略生成器": "生成需求分解、技术实现、质量保证策略，针对不同需求类型制定差异化方法论",
            "网络关系策略生成器": "生成需求关联、依赖分析、冲突解决策略，特别关注混合需求的复杂关系",
            "自动化流水线策略生成器": "生成端到端自动化处理策略，根据需求分类结果选择最优处理路径"
        },
        "架构模式": "策略生成器模式 + 协作委托模式",
        "数据流": {
            "输入流": "用户原始需求 → 系统激活机制 → 智能需求分类器 → 各策略生成器",
            "分类流": "智能需求分类器 → 需求类型识别 → 处理策略选择 → 协作模式确定",
            "处理流": "策略生成器内部处理 → 差异化策略输出 → 协作策略制定",
            "输出流": "处理策略 → 存储策略 → 委托数据系统执行",
            "反馈流": "处理结果 → 分类准确率评估 → 算法优化 → 模型更新"
        },
        "协作机制": {
            "需求输入机制": "接收用户原始需求和业务场景描述",
            "智能分类机制": "基于多维度分析进行需求类型识别和处理策略选择",
            "差异化处理机制": "根据需求类型执行不同的处理策略和协作模式",
            "策略输出机制": "输出各类处理策略和协作策略",
            "系统协作机制": "与数据系统、调度系统、学习系统的协作机制",
            "学习反馈机制": "收集处理结果反馈，持续优化分类算法和处理策略"
        },
        "组件详细设计": {
            "系统激活机制": {
                "触发条件": [
                    "新需求输入检测",
                    "需求变更监控",
                    "需求优化指令",
                    "调度系统激活指令"
                ],
                "激活流程": {
                    "前置检查": "验证系统状态和依赖系统就绪",
                    "环境准备": "初始化策略生成环境和资源分配",
                    "组件启动": "启动各策略生成器组件",
                    "状态同步": "与其他系统建立协作连接"
                },
                "就绪验证": {
                    "规则系统就绪": "验证业务规则、处理规则、验证规则加载完成",
                    "监控系统就绪": "确认性能指标、质量指标、状态指标配置完成",
                    "数据系统连接": "验证与数据系统的协作机制正常"
                }
            },
            "智能需求分类器": {
                "功能": "基于多源学习理念的智能需求分类和识别",
                "分类算法": {
                    "语义分析算法": {
                        "关键词识别": "识别项目开发、AI系统优化、混合需求的特征关键词",
                        "术语匹配": "匹配业务术语、技术术语、系统术语的语义特征",
                        "语义向量分析": "通过语义向量空间分析需求的语义倾向性"
                    },
                    "上下文识别算法": {
                        "场景分析": "分析需求所处的业务场景和技术环境",
                        "角色识别": "识别需求提出者的角色和权限范围",
                        "环境匹配": "匹配需求与当前项目和系统环境的关联度"
                    },
                    "操作对象分析算法": {
                        "文件对象识别": "识别需求涉及的具体文件、代码模块和资源",
                        "系统组件识别": "识别需求涉及的AI系统组件和子系统",
                        "功能模块识别": "识别需求涉及的功能模块和业务流程"
                    }
                },
                "分类决策机制": {
                    "多维度权重评估": "综合语义、上下文、操作对象三个维度的权重评分",
                    "置信度计算": "计算分类结果的置信度和可信度指标",
                    "动态阈值调整": "根据历史分类准确率动态调整分类阈值",
                    "异常检测": "检测无法明确分类的异常需求并标记为待人工确认"
                },
                "分类结果输出": {
                    "项目相关需求": "标记为快速执行类型，优先调度系统响应",
                    "AI系统优化需求": "标记为深度分析类型，优先学习系统处理",
                    "混合需求": "标记为协调平衡类型，多系统协同处理",
                    "不确定需求": "标记为待确认类型，触发人工介入机制"
                },
                "学习优化机制": {
                    "分类准确率监控": "持续监控分类准确率和错误模式",
                    "算法参数优化": "根据反馈结果优化分类算法参数",
                    "特征库更新": "动态更新关键词库和特征模式库",
                    "模型迭代升级": "基于累积数据持续优化分类模型"
                },
                "协作策略": {
                    "数据系统协作": "生成分类结果存储策略，委托数据系统记录分类历史",
                    "学习系统协作": "提供分类准确率数据，支持学习系统优化分类能力",
                    "调度系统协作": "提供需求类型信息，指导调度系统选择最优处理路径"
                }
            },
            "需求收集策略生成器": {
                "功能": "生成需求收集和验证策略，集成智能分类结果",
                "策略生成内容": [
                    "需求接收策略",
                    "智能分类策略",
                    "需求验证策略",
                    "需求修订策略",
                    "需求确认策略"
                ],
                "验证策略标准": [
                    "完整性检查策略",
                    "一致性验证策略",
                    "可行性评估策略",
                    "优先级评估策略"
                ],
                "协作策略": {
                    "数据系统协作": "生成需求数据存储策略，委托数据系统执行存储",
                    "调度系统协作": "生成需求接收和分析结果提供策略",
                    "学习系统协作": "生成能力提升和模式优化需求策略"
                },
                "质量保证策略": {
                    "完整性保证": "生成需求要素和关系完整性保证策略",
                    "一致性保证": "生成内部和外部一致性保证策略",
                    "可追踪性保证": "生成需求和决策追踪策略"
                }
            },
            "内容处理策略生成器": {
                "功能": "生成内容处理策略，不直接处理内容存储",
                "业务理解分析策略生成": {
                    "功能": "生成业务需求理解策略",
                    "策略生成方法": [
                        "业务场景分析策略",
                        "业务流程分析策略",
                        "业务规则分析策略"
                    ],
                    "协作策略": {
                        "数据系统协作": "生成业务分析结果存储策略，委托数据系统存储",
                        "调度系统协作": "生成业务场景和流程理解策略",
                        "学习系统协作": "生成业务知识获取和经验贡献策略"
                    }
                },
                "用户问题识别策略生成": {
                    "功能": "生成用户核心问题识别策略",
                    "策略分析维度": [
                        "问题本质识别策略",
                        "问题影响分析策略",
                        "问题优先级评估策略"
                    ],
                    "协作策略": {
                        "数据系统协作": "生成问题识别结果存储策略，委托数据系统存储",
                        "调度系统协作": "生成问题识别和解决方案生成策略",
                        "学习系统协作": "生成问题模式识别和学习策略"
                    },
                    "识别流程策略": {
                        "问题提取策略": "语义分析、关键词提取、上下文理解",
                        "影响分析策略": "业务影响、用户影响、系统影响分析",
                        "优先级评估策略": "紧急程度、重要程度、影响范围评估"
                    }
                },
                "价值主张提炼策略生成": {
                    "功能": "生成需求价值提炼策略",
                    "策略分析维度": [
                        "业务价值识别策略",
                        "用户价值评估策略",
                        "系统价值确认策略"
                    ],
                    "提炼流程策略": {
                        "价值识别策略": "直接价值、间接价值、潜在价值识别",
                        "价值评估策略": "价值量级、价值范围、价值持续性评估",
                        "价值确认策略": "价值真实性、可实现性、可持续性确认"
                    }
                }
            },
            "方法论策略生成器": {
                "功能": "生成需求处理方法论策略",
                "需求分解策略生成": {
                    "功能": "生成需求分解和结构化策略",
                    "分解策略方法": [
                        "功能分解策略",
                        "层次分解策略",
                        "依赖分解策略"
                    ],
                    "结构化策略": {
                        "模块化策略": "生成需求模块化组织策略",
                        "层次化策略": "生成需求层次化管理策略",
                        "关联化策略": "生成需求关联关系策略"
                    }
                },
                "技术实现策略生成": {
                    "功能": "生成技术实现路径策略",
                    "实现策略维度": [
                        "技术选型策略",
                        "架构设计策略",
                        "实现路径策略"
                    ],
                    "可行性评估策略": {
                        "技术可行性策略": "技术成熟度、技术风险、技术复杂度评估",
                        "资源可行性策略": "人力资源、时间资源、技术资源评估",
                        "业务可行性策略": "业务价值、业务风险、业务影响评估"
                    }
                }
            },
            "网络关系策略生成器": {
                "功能": "生成需求间关系分析和管理策略",
                "关系识别策略生成": {
                    "功能": "生成需求关系识别策略",
                    "关系类型策略": [
                        "依赖关系识别策略",
                        "冲突关系识别策略",
                        "协同关系识别策略"
                    ],
                    "识别方法策略": {
                        "语义分析策略": "基于语义相似度的关系识别",
                        "场景分析策略": "基于业务场景的关系分析",
                        "规则分析策略": "基于业务规则的关系推导"
                    }
                },
                "依赖管理策略生成": {
                    "功能": "生成需求依赖管理策略",
                    "依赖分析策略": [
                        "直接依赖识别策略",
                        "间接依赖分析策略",
                        "循环依赖检测策略"
                    ],
                    "依赖优化策略": {
                        "依赖简化策略": "减少不必要的依赖关系",
                        "依赖解耦策略": "降低依赖耦合度",
                        "依赖排序策略": "优化依赖执行顺序"
                    }
                }
            },
            "自动化流水线策略生成器": {
                "功能": "生成端到端自动化处理策略",
                "流水线设计策略生成": {
                    "功能": "生成自动化流水线设计策略",
                    "设计策略维度": [
                        "流程自动化策略",
                        "决策自动化策略",
                        "执行自动化策略"
                    ],
                    "优化策略": {
                        "效率优化策略": "提高流水线执行效率",
                        "质量优化策略": "保证流水线执行质量",
                        "稳定性优化策略": "增强流水线稳定性"
                    }
                },
                "监控反馈策略生成": {
                    "功能": "生成流水线监控和反馈策略",
                    "监控策略": [
                        "执行状态监控策略",
                        "性能指标监控策略",
                        "异常检测监控策略"
                    ],
                    "反馈策略": {
                        "实时反馈策略": "提供实时执行状态反馈",
                        "异常反馈策略": "及时反馈异常情况",
                        "优化反馈策略": "提供优化建议反馈"
                    }
                }
            }
        }
    },
    "系统目标": {
        "核心目标": [
            "将用户模糊需求转化为精确的技术实现方案",
            "基于多源学习理念实现智能需求分类和差异化处理",
            "建立需求间的关联网络，实现整体性理解",
            "生成高质量的需求处理策略",
            "为调度系统提供准确的需求支持和最优处理路径"
        ],
        "功能目标": [
            "需求理解准确率达到95%以上",
            "智能需求分类准确率达到90%以上",
            "需求分解完整性达到90%以上",
            "需求关联识别准确率达到85%以上",
            "策略生成效率提升80%以上",
            "多源学习效率提升60%以上"
        ],
        "性能目标": [
            "单个需求处理时间控制在30秒内",
            "并发需求处理能力支持100个以上",
            "策略生成处理时间控制在5秒内",
            "系统可用性达到99.9%"
        ],
        "质量目标": [
            "策略生成准确性达到95%以上",
            "需求理解一致性达到90%以上",
            "系统协作成功率达到98%以上",
            "错误恢复时间控制在10秒内"
        ],
        "用户体验目标": [
            "需求输入界面简洁直观",
            "策略生成过程透明可追踪",
            "结果展示清晰易懂",
            "异常处理友好提示"
        ]
    }, 
    "系统特色": {
        "AI智能特色": [
            "深度语义理解 - 运用先进的NLP技术深度理解用户需求语义",
            "多源学习导向的智能分类 - 基于语义分析、上下文识别和操作对象分析的三维分类体系",
            "智能策略生成 - 基于机器学习自动生成最优处理策略",
            "自适应学习 - 根据历史经验持续优化需求理解能力",
            "认知协作模式 - 与其他AI系统建立认知层面的智能协作"
        ],
        "独特能力": [
            "模糊需求精确化 - 将用户模糊表达转化为精确技术方案",
            "智能需求分类 - 精确识别项目相关、AI系统优化、混合三类需求",
            "差异化处理策略 - 根据需求类型制定最优的处理策略和协作模式",
            "需求网络化理解 - 建立需求间的复杂关联网络",
            "动态策略生成 - 根据上下文动态生成最适合的处理策略",
            "多维度需求分析 - 从业务、技术、用户多维度分析需求"
        ],
        "核心优势": [
            "理解准确性 - 通过深度语义分析提高需求理解准确度",
            "处理效率 - 通过智能策略生成大幅提升处理效率",
            "协作智能 - 与其他系统形成智能化协作网络",
            "持续进化 - 具备自我学习和优化能力"
        ],
        "智能化程度": {
            "理解智能化": "90% - 具备高度智能的需求理解和语义分析能力",
            "策略智能化": "85% - 能够智能生成和优化各类处理策略",
            "协作智能化": "80% - 与其他系统建立智能化协作关系",
            "学习智能化": "75% - 具备持续学习和自我优化能力"
        },
        "创新机制": [
            "认知策略生成 - 基于认知科学的策略生成机制",
            "语义网络构建 - 构建需求间的语义关联网络",
            "智能委托模式 - 与数据系统的智能协作委托机制",
            "动态适应机制 - 根据环境变化动态调整策略"
        ]
    },
    "文件架构": {
        "requirement-collection/": {
            "职责": "需求收集 - 需求接收、验证和确认策略",
            "作用": "存储需求收集方法、验证策略、确认流程等策略文件",
            "子文件夹": {
                "intelligent-classification/": {
                    "职责": "智能需求分类策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供多源学习导向的智能需求分类和识别能力",
                        "分类维度": {
                            "语义分析维度": {
                                "项目相关需求识别": "通过关键词、业务术语、技术术语识别项目开发需求",
                                "AI系统优化需求识别": "通过系统名称、优化词汇、性能指标识别AI系统改进需求",
                                "混合需求识别": "识别同时涉及项目开发和AI系统优化的复合需求"
                            },
                            "上下文识别维度": {
                                "业务场景分析": "分析需求所处的业务环境和应用场景",
                                "技术环境分析": "分析需求涉及的技术栈和系统环境",
                                "用户角色分析": "识别需求提出者的角色和权限范围"
                            },
                            "操作对象分析维度": {
                                "文件对象识别": "识别需求涉及的具体文件和代码模块",
                                "系统组件识别": "识别需求涉及的AI系统组件和子系统",
                                "功能模块识别": "识别需求涉及的功能模块和业务流程"
                            }
                        },
                        "分类策略": {
                            "项目相关需求处理策略": {
                                "识别特征": ["业务功能开发", "用户界面设计", "数据库操作", "API接口", "前端组件"],
                                "处理重点": "快速执行，注重实现效果和用户体验",
                                "协作模式": "直接执行模式，优先调度系统快速响应"
                            },
                            "AI系统优化需求处理策略": {
                                "识别特征": ["系统性能优化", "策略文件更新", "学习能力提升", "协作机制改进"],
                                "处理重点": "深度分析，注重系统整体优化和长期效益",
                                "协作模式": "学习驱动模式，优先学习系统深度分析和优化"
                            },
                            "混合需求处理策略": {
                                "识别特征": ["智能化功能开发", "AI辅助业务流程", "数据驱动决策"],
                                "处理重点": "平衡执行和优化，实现项目需求与系统提升双重目标",
                                "协作模式": "协调平衡模式，多系统协同处理"
                            }
                        },
                        "存储内容": [
                            "多维度分类算法策略 - 基于语义、上下文、操作对象的综合分类方法",
                            "需求类型识别策略 - 精确识别项目、AI系统、混合三类需求的方法",
                            "分类置信度评估策略 - 评估需求分类准确性和可信度的方法",
                            "动态分类优化策略 - 根据处理结果持续优化分类准确性的方法"
                        ],
                        "使用场景": [
                            "接收新需求进行智能分类时",
                            "处理复杂混合需求时",
                            "优化需求处理策略时",
                            "提升系统学习效率时"
                        ],
                        "AI理解要点": "这里存储多源学习导向的智能分类方法，帮助AI精确识别需求类型并选择最优处理策略"
                    }
                },
                "input-processing/": {
                    "职责": "需求输入处理策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求输入的标准化处理和验证能力",
                        "存储内容": [
                            "需求接收策略 - 如何接收和初步处理用户原始需求输入",
                            "格式标准化策略 - 如何将不同格式的需求转化为标准格式",
                            "完整性检查策略 - 如何检查需求信息的完整性和必要性",
                            "智能预分类策略 - 结合智能分类结果进行需求预处理"
                        ],
                        "使用场景": [
                            "接收用户新需求时",
                            "处理需求格式转换时",
                            "验证需求完整性时",
                            "执行智能预分类时"
                        ],
                        "AI理解要点": "这里存储的是需求输入处理的具体方法，结合智能分类功能提供更精准的需求预处理"
                    }
                },
                "validation-strategies/": {
                    "职责": "需求验证策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求验证和质量保证的策略方法",
                        "存储内容": [
                            "一致性验证策略 - 如何验证需求内部和外部的一致性",
                            "可行性评估策略 - 如何评估需求的技术和业务可行性",
                            "优先级评估策略 - 如何评估和确定需求的优先级",
                            "冲突检测策略 - 如何检测需求间的潜在冲突"
                        ],
                        "使用场景": [
                            "验证需求质量时",
                            "评估需求可行性时",
                            "检测需求冲突时"
                        ],
                        "AI理解要点": "这里提供需求验证的方法，确保AI能够全面评估需求的质量和可行性"
                    }
                },
                "confirmation-protocols/": {
                    "职责": "需求确认协议策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求确认和最终化的策略方法",
                        "存储内容": [
                            "确认流程策略 - 如何设计和执行需求确认流程",
                            "反馈处理策略 - 如何处理用户对需求理解的反馈",
                            "修订管理策略 - 如何管理需求的修订和版本控制",
                            "最终化策略 - 如何确定需求的最终版本"
                        ],
                        "使用场景": [
                            "确认需求理解时",
                            "处理需求修订时",
                            "最终化需求时"
                        ],
                        "AI理解要点": "这里存储需求确认的方法，确保AI能够准确确认和最终化需求"
                    }
                }
            }
        },
        "content-analysis/": {
            "职责": "内容分析 - 业务理解、问题识别和价值提炼策略",
            "作用": "存储内容分析方法、业务理解策略、问题识别技术等策略文件",
            "子文件夹": {
                "business-understanding/": {
                    "职责": "业务理解策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供深度业务理解和场景分析能力",
                        "存储内容": [
                            "业务场景分析策略 - 如何分析和理解业务场景的特点和要求",
                            "业务流程分析策略 - 如何分析业务流程和操作逻辑",
                            "业务规则识别策略 - 如何识别和理解业务规则和约束",
                            "业务价值评估策略 - 如何评估业务需求的价值和影响"
                        ],
                        "使用场景": [
                            "分析业务需求时",
                            "理解业务场景时",
                            "评估业务价值时"
                        ],
                        "AI理解要点": "这里提供业务理解的方法，帮助AI深度理解业务需求的本质和价值"
                    }
                },
                "problem-identification/": {
                    "职责": "问题识别策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供用户核心问题识别和分析能力",
                        "存储内容": [
                            "问题本质识别策略 - 如何识别用户问题的本质和根源",
                            "问题影响分析策略 - 如何分析问题的影响范围和程度",
                            "问题优先级评估策略 - 如何评估不同问题的优先级",
                            "问题关联分析策略 - 如何分析问题间的关联关系"
                        ],
                        "使用场景": [
                            "识别用户核心问题时",
                            "分析问题影响时",
                            "评估问题优先级时"
                        ],
                        "AI理解要点": "这里存储问题识别的方法，确保AI能够准确识别和分析用户的核心问题"
                    }
                },
                "value-extraction/": {
                    "职责": "价值提炼策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求价值提炼和效益分析能力",
                        "存储内容": [
                            "价值识别策略 - 如何识别需求中的核心价值点",
                            "效益分析策略 - 如何分析需求实现的预期效益",
                            "成本评估策略 - 如何评估需求实现的成本和资源",
                            "价值优化策略 - 如何优化需求以最大化价值"
                        ],
                        "使用场景": [
                            "提炼需求价值时",
                            "分析需求效益时",
                            "优化需求价值时"
                        ],
                        "AI理解要点": "这里提供价值提炼的方法，帮助AI识别和最大化需求的核心价值"
                    }
                }
            }
        },
        "methodology-generation/": {
            "职责": "方法论生成 - 需求分解、技术实现和质量保证策略",
            "作用": "存储方法论生成策略、技术实现方案、质量保证机制等策略文件",
            "子文件夹": {
                "decomposition-strategies/": {
                    "职责": "需求分解策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求分解和任务拆分的策略方法",
                        "存储内容": [
                            "层次分解策略 - 如何按层次结构分解复杂需求",
                            "功能分解策略 - 如何按功能模块分解需求",
                            "优先级分解策略 - 如何按优先级分解需求实现顺序",
                            "依赖关系分解策略 - 如何分析和处理需求间的依赖关系"
                        ],
                        "使用场景": [
                            "分解复杂需求时",
                            "规划实现顺序时",
                            "分析依赖关系时"
                        ],
                        "AI理解要点": "这里存储需求分解的方法，帮助AI将复杂需求分解为可管理的任务"
                    }
                },
                "implementation-planning/": {
                    "职责": "技术实现规划策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供技术实现方案规划和设计能力",
                        "存储内容": [
                            "技术选型策略 - 如何选择合适的技术方案和工具",
                            "架构设计策略 - 如何设计技术架构和系统结构",
                            "实现路径策略 - 如何规划技术实现的具体路径",
                            "风险评估策略 - 如何评估技术实现的风险和挑战"
                        ],
                        "使用场景": [
                            "规划技术实现时",
                            "设计系统架构时",
                            "评估技术风险时"
                        ],
                        "AI理解要点": "这里提供技术实现规划的方法，确保AI能够制定可行的技术实现方案"
                    }
                },
                "quality-assurance/": {
                    "职责": "质量保证策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供质量保证和验收标准制定能力",
                        "存储内容": [
                            "质量标准策略 - 如何制定需求实现的质量标准",
                            "验收标准策略 - 如何制定需求验收的具体标准",
                            "测试策略 - 如何设计需求验证的测试方案",
                            "质量监控策略 - 如何监控实现过程的质量"
                        ],
                        "使用场景": [
                            "制定质量标准时",
                            "设计验收标准时",
                            "规划质量监控时"
                        ],
                        "AI理解要点": "这里存储质量保证的方法，确保AI能够制定完善的质量保证机制"
                    }
                }
            }
        },
        "relationship-network/": {
            "职责": "关系网络 - 需求关联、依赖分析和冲突解决策略",
            "作用": "存储关系网络构建、依赖分析方法、冲突解决机制等策略文件",
            "子文件夹": {
                "correlation-analysis/": {
                    "职责": "需求关联分析策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求间关联关系识别和分析能力",
                        "存储内容": [
                            "关联识别策略 - 如何识别需求间的各种关联关系",
                            "关系分类策略 - 如何分类和标记不同类型的关联关系",
                            "关系强度评估策略 - 如何评估关联关系的强度和重要性",
                            "网络构建策略 - 如何构建需求关联网络"
                        ],
                        "使用场景": [
                            "分析需求关联时",
                            "构建需求网络时",
                            "评估关系影响时"
                        ],
                        "AI理解要点": "这里提供需求关联分析的方法，帮助AI建立完整的需求关系网络"
                    }
                },
                "dependency-management/": {
                    "职责": "依赖关系管理策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求依赖关系分析和管理能力",
                        "存储内容": [
                            "依赖识别策略 - 如何识别需求间的依赖关系",
                            "依赖分析策略 - 如何分析依赖关系的类型和影响",
                            "依赖优化策略 - 如何优化依赖关系以减少复杂性",
                            "依赖监控策略 - 如何监控依赖关系的变化"
                        ],
                        "使用场景": [
                            "分析需求依赖时",
                            "优化依赖关系时",
                            "监控依赖变化时"
                        ],
                        "AI理解要点": "这里存储依赖关系管理的方法，确保AI能够有效管理复杂的需求依赖"
                    }
                },
                "conflict-resolution/": {
                    "职责": "冲突解决策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供需求冲突检测和解决的策略方法",
                        "存储内容": [
                            "冲突检测策略 - 如何检测需求间的各种冲突",
                            "冲突分析策略 - 如何分析冲突的原因和影响",
                            "解决方案策略 - 如何制定冲突解决方案",
                            "预防策略 - 如何预防潜在的需求冲突"
                        ],
                        "使用场景": [
                            "检测需求冲突时",
                            "解决需求冲突时",
                            "预防冲突发生时"
                        ],
                        "AI理解要点": "这里提供冲突解决的方法，帮助AI有效处理需求间的各种冲突"
                    }
                }
            }
        },
        "automation-pipeline/": {
            "职责": "自动化流水线 - 端到端自动化处理策略",
            "作用": "存储自动化流水线设计、流程优化、效率提升等策略文件",
            "子文件夹": {
                "pipeline-design/": {
                    "职责": "流水线设计策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供自动化流水线设计和构建能力",
                        "存储内容": [
                            "流程设计策略 - 如何设计端到端的需求处理流程",
                            "自动化策略 - 如何实现流程的自动化处理",
                            "节点配置策略 - 如何配置流水线的各个处理节点",
                            "流程优化策略 - 如何优化流水线的效率和质量"
                        ],
                        "使用场景": [
                            "设计处理流水线时",
                            "配置自动化流程时",
                            "优化处理效率时"
                        ],
                        "AI理解要点": "这里存储流水线设计的方法，帮助AI构建高效的自动化处理流程"
                    }
                },
                "efficiency-optimization/": {
                    "职责": "效率优化策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供处理效率优化和性能提升能力",
                        "存储内容": [
                            "性能分析策略 - 如何分析处理流程的性能瓶颈",
                            "优化方案策略 - 如何制定性能优化方案",
                            "资源配置策略 - 如何优化资源配置以提升效率",
                            "监控评估策略 - 如何监控和评估优化效果"
                        ],
                        "使用场景": [
                            "分析性能瓶颈时",
                            "优化处理效率时",
                            "评估优化效果时"
                        ],
                        "AI理解要点": "这里提供效率优化的方法，确保AI能够持续提升需求处理的效率"
                    }
                },
                "integration-coordination/": {
                    "职责": "集成协调策略存储",
                    "作用机制": {
                        "核心功能": "为AI提供系统集成和协调配合能力",
                        "存储内容": [
                            "系统集成策略 - 如何与其他系统进行有效集成",
                            "协调配合策略 - 如何协调多系统的配合工作",
                            "接口管理策略 - 如何管理系统间的接口和通信",
                            "协作优化策略 - 如何优化系统间的协作效率"
                        ],
                        "使用场景": [
                            "集成其他系统时",
                            "协调系统配合时",
                            "优化协作效率时"
                        ],
                        "AI理解要点": "这里存储集成协调的方法，确保AI能够有效协调各系统的配合工作"
                    }
                }
            }
        }
    }
}