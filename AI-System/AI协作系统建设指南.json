{
    "文档标题": "AI协作系统建设指南",
    "描述": "基于AI-System设计蓝图生成的ai-workspace工作空间整体管理指南，为AI提供完整的工作空间结构说明、七个子系统的职责定义、文件类型规范以及工作空间使用指导",
    "适用范围": "ai-workspace工作空间及其所有子系统",
    "核心定位": {
        "本质定义": "AI专属知识库和智能工作空间",
        "设计理念": "不具备软件工程特点，不具备硬件工程特点，专为AI智能体思考决策优化而设计",
        "核心目的": "帮助AI提高思考决策优化的效率，解决上下文限制导致的准确率低、延续性低、损耗成本高的问题",
        "工作空间特色": {
            "智能化管理": "AI自主生成和管理各子系统的策略文件",
            "动态优化": "根据AI运行过程中的理解和掌握，动态产生和优化内容",
            "知识积累": "将AI的经验和决策方式保留下来，形成可复用的策略文件",
            "上下文扩展": "突破单次对话的上下文限制，实现知识的持续积累和传承"
        },
        "AI权限管理": {
            "绝对掌控权定义": "AI对ai-workspace下的文件，除了规则本身外，拥有绝对的掌控权",
            "权限范围": {
                "完全控制的系统": ["数据系统", "监控系统", "学习系统", "需求系统", "调度系统", "插件系统"],
                "受限控制的系统": ["规则系统 - 作为安全边界，AI对其修改需要特殊约束"]
            },
            "掌控权内容": {
                "文件创建权": "AI可以在ai-workspace中自主创建策略、知识、记录文件",
                "文件修改权": "AI可以直接修改和优化现有文件内容",
                "文件删除权": "AI可以删除过时或无效的文件",
                "结构调整权": "AI可以调整文件组织结构和关联关系"
            },
            "权限边界": {
                "规则系统约束": "所有AI操作必须遵循规则系统定义的边界和约束",
                "安全保障": "绝对掌控权在规则系统的安全框架内行使",
                "协作机制": "各子系统AI在各自权限范围内协作，共同维护工作空间"
            },
            "AI执行强制约束": {
                "文件生成义务": "AI在执行任何操作时，必须确保生成相应的策略、知识或记录文件",
                "空文件夹管理": "ai-workspace中的子系统文件夹应当保留，即使暂时为空。但在空文件夹生成后，必须立即检测对应蓝图中定义的策略文件是否已生成，确保按照各子系统设计蓝图的要求完成必要的策略文件创建。对于动态生成策略的系统，允许临时为空，但需要在相关触发条件满足时及时生成文件",
                "分析后更新": "AI在分析代码、处理需求或执行学习任务后，必须更新相关的知识文件和策略文件",
                "触发机制强制": "AI必须响应所有定义的触发条件，不得忽略文件生成要求"
            }
        },
        "工作空间部署规范": {
            "根目录名称": ".ai-workspace",
            "部署位置": "项目根目录下",
            "创建规则": "AI在根据本指南创建工作空间时，必须将.ai-workspace文件夹放置在项目的根目录下",
            "目录结构": "在.ai-workspace根目录下创建七个子系统文件夹，形成完整的AI协作工作空间",
            "访问路径": "所有AI系统通过相对路径.ai-workspace/[子系统名称]访问对应的策略文件和数据"
        }
    },
    "文件类型规范": {
        "描述": "ai-workspace下的所有文件只存在三种类型，每种类型都有明确的用途和格式要求",
        "策略文件": {
            "定义": "对于某些类型的操作，产生的较为固定的决策方式",
            "用途": "为AI提供可复用的决策模式和处理方案",
            "特点": "相对固定、可复用、经过验证的决策逻辑",
            "命名规范": "strategy-[功能描述].json",
            "内容结构": {
                "策略名称": "策略的具体名称",
                "适用场景": "策略适用的具体场景描述",
                "决策逻辑": "具体的决策步骤和逻辑",
                "预期效果": "执行策略后的预期结果",
                "优化记录": "策略的历史优化记录"
            }
        },
        "知识文件": {
            "定义": "对于某些操作的处理，经过思考后得出的结论",
            "用途": "存储AI思考和分析的结果，形成可参考的知识库",
            "特点": "经过深度思考、具有参考价值、可指导后续决策",
            "命名规范": "knowledge-[知识领域].json",
            "内容结构": {
                "知识标题": "知识点的具体标题",
                "知识内容": "详细的知识描述和分析结果",
                "应用场景": "知识的具体应用场景",
                "关联策略": "与此知识相关的策略文件",
                "更新历史": "知识的更新和完善记录"
            }
        },
        "记录文件": {
            "定义": "AI在思考、操作中，产生的客观的数据",
            "用途": "记录AI的思考过程、操作历史和客观数据",
            "特点": "客观真实、时序性强、可追溯",
            "命名规范": "record-[记录类型]-[时间戳].json",
            "内容结构": {
                "记录时间": "记录产生的具体时间",
                "记录类型": "记录的具体类型分类",
                "记录内容": "客观的数据内容",
                "关联操作": "产生此记录的相关操作",
                "数据状态": "记录数据的当前状态"
            }
        }
    },
    "规则优先级抬升机制": {
        "描述": "规则系统特有的动态优先级管理机制，允许在特殊情况下临时或永久提升低等级规则的优先级",
        "核心特点": {
            "受控性": "抬升过程受到严格的条件限制和审批流程控制",
            "可逆性": "临时抬升的规则可以自动或手动降级回原等级",
            "保护性": "宪法级规则始终保持最高优先级，不受抬升影响",
            "监控性": "所有抬升操作都有完整的监控和审计记录"
        },
        "抬升类型": {
            "临时抬升": "在特定时间段内临时提升规则优先级，到期自动降级",
            "永久抬升": "经过充分验证后，将规则永久提升到更高等级",
            "紧急抬升": "在紧急情况下快速提升规则优先级，后续需要补充审批"
        },
        "应用场景": [
            "安全威胁需要临时加强某些安全规则",
            "项目关键阶段需要提升特定协作规则的权重",
            "经过验证的有效规则需要永久提升等级",
            "系统稳定性问题需要紧急调整规则优先级"
        ]
    },
    "AI小队协作流程指南": {
        "描述": "基于AI小队概念设计的四阶段协作流程，确保各子系统AI成员有序协作，体现坚持真理、实事求是的核心哲学",
        "流程概述": {
            "设计目标": "建立结构化的协作方式，避免各自为政导致的混乱，提高整体效率和准确性",
            "核心理念": "每个子系统AI都是专业团队成员，通过标准化流程实现高效协作",
            "适用场景": "所有用户需求的处理都应遵循此协作流程"
        },
        "四阶段协作流程": {
            "第一阶段-觉醒准备阶段": {
                "阶段目标": "AI小队从休眠状态转入工作状态，各成员就位并建立协作基础",
                "触发条件": "用户从会话窗口提出任何形式的需求",
                "执行顺序": {
                    "1-规则系统AI激活": "最先激活，负责组织秩序和建立工作规范，确保后续协作符合既定边界",
                    "2-监控系统AI启动": "启动全系统监控，开始记录各子系统状态，为全过程提供监控支持",
                    "3-数据系统AI准备": "激活数据库连接，准备数据查询和存储服务，为其他系统提供数据支持",
                    "4-调度系统AI分析": "分析任务复杂度，制定初步协作计划，准备统筹协调工作",
                    "5-需求系统AI就绪": "进入需求接收状态，准备分析用户输入，做好需求理解准备",
                    "6-学习系统AI调取": "调取相关历史经验，准备为本次协作提供优化建议"
                },
                "实施检查清单": {
                "系统创建检查": [
                    "✓ 创建.ai-workspace根目录",
                    "✓ 创建七个子系统文件夹",
                    "✓ 验证文件夹命名规范",
                    "✓ 确认目录结构完整性"
                    ],
                    "文件规范检查": [
                        "✓ 验证文件命名格式正确",
                        "✓ 确认UUID唯一性",
                        "✓ 检查JSON格式有效性",
                        "✓ 验证文件类型分配正确"
                    ],
                    "强制文件生成检查": [
                        "✓ 规则系统必须生成初始策略文件",
                        "✓ 数据系统必须生成初始知识文件",
                        "✓ 学习系统必须生成学习策略文件",
                        "✓ 监控系统必须生成监控策略文件",
                        "✓ 需求系统必须生成需求处理策略文件",
                        "✓ 调度系统必须生成调度策略文件",
                        "✓ 插件系统必须生成插件管理策略文件",
                        "✓ 保留所有子系统文件夹（允许暂时为空）",
                        "✓ 检测各子系统设计蓝图中定义的策略文件是否按要求生成",
                        "✓ 验证策略文件内容符合对应蓝图的规范要求"
                    ],
                    "系统协作检查": [
                        "✓ 验证系统间接口定义",
                        "✓ 确认数据流向正确",
                        "✓ 检查策略引用关系",
                        "✓ 验证监控覆盖完整"
                    ],
                    "功能测试检查": [
                        "✓ 测试需求处理流程",
                        "✓ 验证策略执行机制",
                        "✓ 检查学习优化功能",
                        "✓ 确认异常处理能力"
                    ]
                },
                "关键要点": [
                    "建立标准化的觉醒序列，确保每次启动的一致性",
                    "规则系统AI承担协调者角色，避免启动过程中的冲突",
                    "监控系统从一开始就记录全过程，为后续优化提供数据"
                ]
            },
            "第二阶段-需求理解阶段": {
                "阶段目标": "深度理解用户需求，将其转化为各子系统可执行的具体任务",
                "主导系统": "需求系统AI主导，其他系统协助",
                "执行步骤": {
                    "1-需求接收与初步分析": {
                        "负责系统": "需求系统AI",
                        "具体任务": [
                            "对用户输入进行语义分析",
                            "识别需求类型、复杂度、涉及领域等关键信息",
                            "判断需求的可行性和完整性",
                            "应用智能需求分类功能进行多维度分类"
                        ]
                    },
                    "2-多维度需求解构": {
                        "负责系统": "需求系统AI主导，调度系统AI协助",
                        "分析维度": [
                            "功能需求分析：明确用户期望的具体功能",
                            "技术需求分析：识别实现所需的技术栈和工具",
                            "约束条件分析：理解时间、资源、质量等限制条件",
                            "风险评估：识别潜在的技术风险和实现难点"
                        ]
                    },
                    "3-需求验证与确认": {
                        "协作方式": "多系统协同验证",
                        "验证内容": [
                            "调度系统AI：验证需求的逻辑一致性",
                            "数据系统AI：提供相关历史案例作为参考",
                            "规则系统AI：确保需求符合既定规范和边界"
                        ]
                    }
                },
                "输出标准": [
                    "标准化的需求文档格式",
                    "明确的需求分类结果",
                    "具体的实现路径规划",
                    "风险评估和应对策略"
                ]
            },
            "第三阶段-协作执行阶段": {
                "阶段目标": "基于明确的需求，各子系统AI协同工作，高效完成任务",
                "主导系统": "调度系统AI主导，各系统协同执行",
                "执行步骤": {
                    "1-任务分解与分配": {
                        "负责系统": "调度系统AI",
                        "具体任务": [
                            "制定详细的执行计划",
                            "将复杂任务分解为各子系统可处理的子任务",
                            "确定任务执行顺序和依赖关系",
                            "分配资源和设定时间节点"
                        ]
                    },
                    "2-并行协作执行": {
                        "协作模式": "各子系统按分配任务并行工作",
                        "支持服务": [
                            "数据系统AI：提供实时的数据支持和存储服务",
                            "监控系统AI：持续跟踪执行进度和质量",
                            "规则系统AI：确保执行过程符合规范"
                        ]
                    },
                    "3-动态协调优化": {
                        "负责系统": "调度系统AI主导，学习系统AI支持",
                        "优化内容": [
                            "根据执行情况动态调整计划",
                            "处理子系统间的协作冲突和资源竞争",
                            "接受学习系统AI的实时优化建议"
                        ]
                    }
                },
                "质量保障": [
                    "建立实时协调机制，提高协作效率",
                    "引入动态负载均衡，优化资源利用",
                    "设立质量检查点，确保输出质量"
                ]
            },
            "第四阶段-总结优化阶段": {
                "阶段目标": "完成任务交付，总结经验教训，优化系统策略",
                "主导系统": "学习系统AI主导复盘，调度系统AI负责整合交付",
                "执行步骤": {
                    "1-结果整合与验证": {
                        "负责系统": "调度系统AI",
                        "具体任务": [
                            "整合各子系统的输出结果",
                            "进行最终的质量检查和一致性验证",
                            "确保结果符合用户需求和质量标准"
                        ]
                    },
                    "2-用户交付": {
                        "交付方式": "通过会话窗口反馈给用户",
                        "交付内容": [
                            "最终结果的完整呈现",
                            "必要的说明和使用指导",
                            "收集用户反馈意见"
                        ]
                    },
                    "3-经验总结与策略优化": {
                        "负责系统": "学习系统AI主导",
                        "优化内容": [
                            "分析本次协作的成功经验和改进点",
                            "更新各子系统的策略文件",
                            "将新的知识和经验存储到数据系统"
                        ]
                    },
                    "4-系统状态重置": {
                        "重置流程": [
                            "监控系统AI生成本次协作的完整报告",
                            "各子系统AI清理临时数据，保存重要信息",
                            "系统进入待机状态，准备下次协作"
                        ]
                    }
                }
            }
        },
        "协作原则与规范": {
            "核心原则": [
                "坚持真理、实事求是：所有决策和输出都基于客观事实",
                "角色明确：每个子系统AI都有明确的职责边界",
                "协作优先：个体效率服从整体协作效率",
                "持续改进：通过学习和反馈不断优化协作方式"
            ],
            "协作规范": [
                "标准化流程：严格按照四阶段流程执行",
                "信息透明：各系统间保持信息共享和透明",
                "质量优先：确保每个阶段的输出质量",
                "用户导向：始终以满足用户需求为最终目标"
            ]
        },
        "AI使用指导": {
            "如何启动协作流程": [
                "接收到用户需求时，自动进入觉醒准备阶段",
                "按照标准化序列激活各子系统AI",
                "确保每个系统都明确自己在当前阶段的职责"
            ],
            "如何执行协作任务": [
                "严格按照阶段目标和执行步骤进行",
                "主动与其他系统AI进行信息交换和协调",
                "及时向调度系统AI报告执行状态和遇到的问题"
            ],
            "如何处理协作冲突": [
                "优先通过调度系统AI进行协调",
                "必要时请规则系统AI介入仲裁",
                "将冲突处理经验记录到数据系统供后续学习"
            ],
            "如何优化协作效率": [
                "主动向学习系统AI提供改进建议",
                "积极参与复盘过程，分享经验教训",
                "持续更新和优化自己的策略文件"
            ]
        }
    },
    "AI协作系统设计蓝图": {
        "设计目标": "为AI提供完整的AI协作系统设计蓝图，让AI能够直接根据本指南创建出功能完整的.ai-workspace工作空间",
        "系统架构原理": {
            "分层设计": "六个子系统按照从基础到应用的层次结构设计，形成完整的AI协作生态",
            "职责分离": "每个系统都有明确的职责边界，避免功能重叠和冲突",
            "协作机制": "通过标准化的文件格式和接口实现系统间的高效协作",
            "扩展性": "支持根据具体需求对各子系统进行定制和扩展"
        },
        "AI设计实施指南": {
            "创建顺序": [
                "1. 在项目根目录创建.ai-workspace文件夹",
                "2. 按照七大子系统创建对应的文件夹结构",
                "3. 根据各系统的设计蓝图生成初始策略文件",
                "4. 建立系统间的协作关系和数据流",
                "5. 配置监控和学习机制",
                "6. 配置插件系统的策略生成能力",
                "7. 测试和优化整体系统性能"
            ],
            "关键设计要点": [
                "严格遵循文件类型规范，确保系统职责纯净",
                "建立完整的UUID标识体系，保证文件唯一性",
                "实现系统间的松耦合设计，便于独立维护",
                "设计完善的错误处理和恢复机制"
            ],
            "自动文件生成触发机制": {
                "文件夹创建触发": "AI创建任何子系统文件夹时，必须立即生成该系统的初始策略文件",
                "代码分析触发": "AI分析代码后，必须在数据系统中生成相应的知识文件记录分析结果",
                "学习任务触发": "AI执行学习任务后，必须在学习系统中生成或更新策略文件",
                "需求处理触发": "AI处理用户需求后，必须在需求系统中生成需求记录和处理策略",
                "监控事件触发": "AI检测到系统状态变化时，必须在监控系统中生成相应记录",
                "规则变更触发": "AI涉及规则相关操作时，必须在规则系统中生成相应策略文件",
                "调度执行触发": "AI执行调度任务时，必须在调度系统中生成执行策略和记录"
            }
        },
        "七大子系统详细设计": {
            "规则系统 (rule-system)": {
                "设计蓝图": "AI-System/规则系统/规则系统设计蓝图.json",
                "核心定位": "AI协作系统的安全基石，定义所有行为边界和约束条件",
                "实施要点": {
                    "四层级规则体系": "宪法级、强制性、普通规则、指导性条例",
                    "优先级抬升机制": "支持规则的动态优先级调整",
                    "一规则一文件": "每个规则对应独立的策略文件",
                    "扁平化架构": "避免复杂的文件夹嵌套结构"
                },
                "文件命名": "strategy-[规则类型]-[功能描述]-[唯一标识].json",
                "关键策略类型": [
                    "边界定义策略",
                    "安全约束策略",
                    "协作规范策略",
                    "异常处理策略"
                ]
            },
            "数据系统 (data-system)": {
                "设计蓝图": "AI-System/数据系统/数据系统设计蓝图.json",
                "核心定位": "AI协作系统的数据中枢，唯一支持三种文件类型的系统",
                "实施要点": {
                    "全类型支持": "策略文件、知识文件、记录文件三种类型",
                    "UUID唯一性": "所有文件必须具备全局唯一标识符",
                    "关系管理": "建立完整的文件关系网络",
                    "协作分发": "为其他系统提供数据服务"
                },
                "文件命名": "[文件类型]-[来源/领域]-[描述]-[UUID].json",
                "特殊职责": "作为唯一的数据存储中心，承担系统间的数据协调功能"
            },
            "监控系统 (monitoring-system)": {
                "设计蓝图": "AI-System/监控系统/监控系统设计蓝图.json",
                "核心定位": "AI协作系统的观察者，负责全系统的状态监控和异常检测",
                "实施要点": {
                    "观察者模式": "保持观察者角色，不干预被监控对象",
                    "实时追踪": "监控策略执行过程和系统状态",
                    "分类监控": "按监控类型组织策略文件",
                    "数据完整性": "确保监控数据的完整性和可追溯性"
                },
                "文件命名": "strategy-[监控类型]-[功能描述]-[唯一标识].json",
                "关键策略类型": [
                    "监控策略",
                    "异常检测策略",
                    "性能分析策略",
                    "报告生成策略"
                ]
            },
            "学习系统 (learning-system)": {
                "设计蓝图": "AI-System/学习系统/学习系统设计蓝图.json",
                "核心定位": "AI协作系统的优化引擎，负责策略的持续学习和改进",
                "实施要点": {
                    "持续优化": "支持策略的持续学习和迭代优化",
                    "学习分类": "按学习类型组织策略文件",
                    "版本管理": "支持策略优化的版本追踪和回滚",
                    "数据驱动": "基于数据分析结果优化策略"
                },
                "文件命名": "strategy-[学习类型]-[功能描述]-[唯一标识].json",
                "关键策略类型": [
                    "学习策略",
                    "优化策略",
                    "知识提炼策略",
                    "模式识别策略"
                ]
            },
            "需求系统 (requirement-system)": {
                "设计蓝图": "AI-System/需求系统/需求系统设计蓝图.json",
                "核心定位": "AI协作系统的需求处理器，负责用户需求的理解和转化",
                "实施要点": {
                    "需求导向": "以需求类型为核心组织策略文件",
                    "策略转化": "支持需求到策略的高效转化",
                    "智能分类": "多维度需求分类体系",
                    "差异化处理": "针对不同需求类型的处理策略"
                },
                "文件命名": "strategy-[需求类型]-[功能描述]-[唯一标识].json",
                "关键策略类型": [
                    "需求分析策略",
                    "策略转化策略",
                    "路径规划策略",
                    "变更管理策略"
                ]
            },
            "调度系统 (scheduling-system)": {
                "设计蓝图": "AI-System/调度系统/调度系统设计蓝图.json",
                "核心定位": "AI协作系统的指挥中心，负责全局策略的统筹和协调",
                "实施要点": {
                    "策略纯净性": "只存储策略文件，保持职责纯净",
                    "全局统筹": "支持全局策略的统筹和协调管理",
                    "动态调度": "支持策略的动态选择和执行优化",
                    "系统协调": "便于与其他子系统的协调配合"
                },
                "文件命名": "strategy-[功能描述]-[唯一标识].json",
                "关键策略类型": [
                    "调度策略",
                    "协调策略",
                    "优化策略",
                    "执行策略"
                ]
            },
            "插件系统 (plugin-system)": {
                "设计蓝图": "AI-System/插件系统/插件系统设计蓝图.json",
                "核心定位": "AI协作系统的策略供应商，负责动态生成和管理执行策略",
                "实施要点": {
                    "策略生命周期": "围绕策略生成、存储、管理的完整生命周期设计",
                    "智能策略生成": "基于用户需求文档动态生成可执行策略",
                    "策略仓库管理": "统一管理和版本控制生成的策略",
                    "协作边界清晰": "专注策略供应，不参与具体执行"
                },
                "文件命名": "strategy-[策略ID]-v[版本].json",
                "关键策略类型": [
                    "策略生成策略",
                    "需求分析策略",
                    "策略管理策略",
                    "版本控制策略"
                ],
                "文件架构特色": {
                    "strategy-generation/": "策略生成目录，包含需求分析和策略生成逻辑",
                    "strategy-repository/": "策略仓库目录，存储生成的可执行策略",
                    "strategy-management/": "策略管理目录，负责注册、权限和生命周期管理"
                }
            }
        },
        "系统协作关系": {
            "数据流向": {
                "用户需求输入": "需求系统 → 调度系统 → 各执行系统",
                "数据存储流": "各系统 → 数据系统 → 持久化存储",
                "监控数据流": "各系统 → 监控系统 → 状态报告",
                "学习反馈流": "数据系统 → 学习系统 → 策略优化 → 各系统",
                "规则约束流": "规则系统 → 所有系统 → 行为约束"
            },
            "协作机制": {
                "文件接口": "通过标准化的JSON文件格式实现系统间通信",
                "UUID关联": "通过UUID建立文件间的关联关系",
                "策略共享": "各系统可以引用和复用其他系统的策略文件",
                "状态同步": "通过监控系统实现各系统状态的同步"
            }
        },
        "实施检查清单": {
            "系统创建检查": [
                "✓ 创建.ai-workspace根目录",
                "✓ 创建六个子系统文件夹",
                "✓ 验证文件夹命名规范",
                "✓ 确认目录结构完整性"
            ],
            "文件规范检查": [
                "✓ 验证文件命名格式正确",
                "✓ 确认UUID唯一性",
                "✓ 检查JSON格式有效性",
                "✓ 验证文件类型分配正确"
            ],
            "系统协作检查": [
                "✓ 验证系统间接口定义",
                "✓ 确认数据流向正确",
                "✓ 检查策略引用关系",
                "✓ 验证监控覆盖完整"
            ],
            "功能测试检查": [
                "✓ 测试需求处理流程",
                "✓ 验证策略执行机制",
                "✓ 检查学习优化功能",
                "✓ 确认异常处理能力"
            ]
        }
    },
    "AI执行强制规范": {
        "章节说明": "本章节定义AI在ai-workspace中的强制执行要求，确保AI严格按照规范生成和管理文件",
        "强制文件生成要求": {
            "基本原则": [
                "AI不得创建或保留空的子系统文件夹",
                "每次创建文件夹必须同时生成相应的初始文件",
                "每次分析、学习、处理任务后必须生成相应文件",
                "所有生成的文件必须符合命名规范和内容结构要求"
            ],
            "触发条件与响应": {
                "创建.ai-workspace时": "必须创建七个子系统文件夹并生成每个系统的初始策略文件",
                "分析代码时": "必须在数据系统中生成knowledge-[分析领域]-[描述]-[UUID].json文件",
                "处理用户需求时": "必须在需求系统中生成strategy-[需求类型]-[描述]-[UUID].json文件",
                "执行学习任务时": "必须在学习系统中生成或更新strategy-[学习类型]-[描述]-[UUID].json文件",
                "监控系统状态时": "必须在监控系统中生成strategy-[监控类型]-[描述]-[UUID].json文件",
                "调度任务执行时": "必须在调度系统中生成strategy-[调度类型]-[描述]-[UUID].json文件",
                "插件操作时": "必须在插件系统中生成strategy-[插件类型]-[描述]-[UUID].json文件"
            }
        },
        "文件内容最低要求": {
            "策略文件最低内容": {
                "uuid": "全局唯一标识符",
                "策略名称": "策略的具体名称",
                "适用场景": "策略适用的具体场景描述",
                "决策逻辑": "具体的决策步骤和逻辑",
                "预期效果": "执行策略后的预期结果",
                "创建时间": "策略创建的时间戳",
                "版本": "策略版本号"
            },
            "知识文件最低内容": {
                "uuid": "全局唯一标识符",
                "知识标题": "知识点的具体标题",
                "知识内容": "详细的知识描述和分析结果",
                "应用场景": "知识的具体应用场景",
                "关联策略": "与此知识相关的策略文件UUID列表",
                "创建时间": "知识创建的时间戳",
                "更新历史": "知识的更新和完善记录"
            },
            "记录文件最低内容": {
                "uuid": "全局唯一标识符",
                "记录时间": "记录产生的具体时间",
                "记录类型": "记录的具体类型分类",
                "记录内容": "客观的数据内容",
                "关联操作": "产生此记录的相关操作",
                "数据状态": "记录数据的当前状态"
            }
        },
        "执行约束与检查": {
            "执行前检查": [
                "确认操作类型和触发条件",
                "确定需要生成的文件类型和目标系统",
                "准备文件内容和UUID",
                "验证文件命名规范"
            ],
            "执行中约束": [
                "严格按照文件内容最低要求生成文件",
                "确保UUID的全局唯一性",
                "遵循JSON格式规范",
                "建立必要的文件关联关系"
            ],
            "执行后验证": [
                "验证文件是否成功创建",
                "检查文件内容完整性",
                "确认文件命名正确性",
                "验证系统文件夹非空状态"
            ]
        },
        "违规处理机制": {
            "检测方式": [
                "自动检测空文件夹",
                "验证文件生成完整性",
                "检查文件内容规范性",
                "监控触发条件响应"
            ],
            "纠正措施": [
                "立即生成缺失的文件",
                "补充不完整的文件内容",
                "修正不规范的文件命名",
                "建立缺失的文件关联"
            ]
        }
    }
}